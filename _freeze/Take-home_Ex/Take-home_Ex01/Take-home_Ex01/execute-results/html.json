{
  "hash": "5f5b91d617f56285fdb34b374dd65f7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Sathvika Subramanian\"\ndate: \"February 6, 2025\"\ndate-modified: \"February 16, 2025\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Ship Performance Data Analysis\n\n\n# 1. Introduction\n\n## 1.1 Background\n\nOne of the most important aspects of international trade, the marine industry makes a substantial contribution to both sustainability and economic growth. Improving decision-making and reducing environmental effect require an understanding of ship performance, fuel efficiency, and operating cost issues.\n\nThe purpose of this dataset is to offer a platform for investigating ship performance trends, spotting patterns, and using data-driven methods to address actual maritime problems.\n\n## 1.2 Objectives\n\nIn this exercise, the data is processed by using appropriate tidyverse family of packages and the statistical graphics are prepared using ggplot2 and its extensions to identify trends and relevant business insight regarding shipping performance.\n\n\n# 2. Getting Started\n\n## 2.1 Analytical Tools\n\nThe following code chunk uses p_load() of pacman package to check if packages are installed in the computer. If they are, the libraries will be called into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggthemes, ggridges, patchwork, ggstatsplot, GGally, corrplot)\n```\n:::\n\n\n\n-   tidyverse: Core collection of R packages designed for data science. It is a set of packages that work in harmony because they share common data representations and 'API' design. This package is designed to make it easy to install and load multiple 'tidyverse' packages in a single step.\n-   ggthemes: to use additional themes for ggplot2\n-   ggridges: Ridgeline plots provide a convenient way of visualizing changes in distributions over time or space\n-   patchwork: 'patchwork' is a package that expands the composition of multiple plots to allow for arbitrarily complex composition of plots by, among others, providing mathematical operators for combining multiple plots. \n-   ggstatsplot: Extension of 'ggplot2', 'ggstatsplot' creates graphics with details from statistical tests included in the plots themselves. It provides an easier syntax to generate information-rich plots for statistical analysis of continuous or categorical data. \n-   GGally: 'GGally' extends 'ggplot2' by adding several functions to reduce the complexity of combining geometric objects with transformed data. Some of these functions include a pairwise plot matrix, a two group pairwise plot matrix, a parallel coordinates plot, a survival plot, and several functions to plot networks.\n-   corrplot:Provides a visual exploratory tool on correlation matrix that supports automatic variable reordering to help detect hidden patterns among variables.\n\n## 2.2 Data Sources\n\nKey operational metrics and characteristics of several ship types in the Gulf of Guinea are represented by the Ship Performance Dataset, a synthetic yet realistic data collection. This dataset is designed for professionals interested in studying clustering, prediction, and optimization issues in the maritime sector, as well as fans for maritime data analytics and machine learning practitioners. This dataset is from kaggle.\n\n\n# 3. Data Wrangling\n\n## 3.1 Importing Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n```\n:::\n\n\n\n## 3.2 Duplicates Check\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data[duplicated(ship_data), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 18\n# ℹ 18 variables: Date <date>, Ship_Type <chr>, Route_Type <chr>,\n#   Engine_Type <chr>, Maintenance_Status <chr>, Speed_Over_Ground_knots <dbl>,\n#   Engine_Power_kW <dbl>, Distance_Traveled_nm <dbl>, Draft_meters <dbl>,\n#   Weather_Condition <chr>, Cargo_Weight_tons <dbl>,\n#   Operational_Cost_USD <dbl>, Revenue_per_Voyage_USD <dbl>,\n#   Turnaround_Time_hours <dbl>, Efficiency_nm_per_kWh <dbl>,\n#   Seasonal_Impact_Score <dbl>, Weekly_Voyage_Count <dbl>, …\n```\n\n\n:::\n:::\n\n\nNo duplicates are present in the dataset.\n\n## 3.3 Na values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Checks for NA in each column\ncolSums(is.na(ship_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\nNo na values are present.\n\n## 3.4 Data Overview\n\nUsing the glimpse() function, we see that the dataset consists of 2736 rows rows and 18 columns. It also shows the column names, column type, and the first few entries of each column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <dbl> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n:::\n\n\n\n## 3.5 Check Data Structure\n\nUsing the str() function, we observe that some variables may need to be re-casted. In this case all the columns are in the right type and re-casting is not necessary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [2,736 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Date                   : Date[1:2736], format: \"2023-06-04\" \"2023-06-11\" ...\n $ Ship_Type              : chr [1:2736] \"Container Ship\" \"Fish Carrier\" \"Container Ship\" \"Bulk Carrier\" ...\n $ Route_Type             : chr [1:2736] \"None\" \"Short-haul\" \"Long-haul\" \"Transoceanic\" ...\n $ Engine_Type            : chr [1:2736] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\" \"Diesel\" \"Steam Turbine\" ...\n $ Maintenance_Status     : chr [1:2736] \"Critical\" \"Good\" \"Fair\" \"Fair\" ...\n $ Speed_Over_Ground_knots: num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW        : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm   : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters           : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Weather_Condition      : chr [1:2736] \"Moderate\" \"Rough\" \"Moderate\" \"Moderate\" ...\n $ Cargo_Weight_tons      : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD   : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours  : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh  : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score  : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count    : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage: num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Date = col_date(format = \"\"),\n  ..   Ship_Type = col_character(),\n  ..   Route_Type = col_character(),\n  ..   Engine_Type = col_character(),\n  ..   Maintenance_Status = col_character(),\n  ..   Speed_Over_Ground_knots = col_double(),\n  ..   Engine_Power_kW = col_double(),\n  ..   Distance_Traveled_nm = col_double(),\n  ..   Draft_meters = col_double(),\n  ..   Weather_Condition = col_character(),\n  ..   Cargo_Weight_tons = col_double(),\n  ..   Operational_Cost_USD = col_double(),\n  ..   Revenue_per_Voyage_USD = col_double(),\n  ..   Turnaround_Time_hours = col_double(),\n  ..   Efficiency_nm_per_kWh = col_double(),\n  ..   Seasonal_Impact_Score = col_double(),\n  ..   Weekly_Voyage_Count = col_double(),\n  ..   Average_Load_Percentage = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n\n\n## 3.6 Remove None from columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  filter(Route_Type != \"None\", Ship_Type != \"None\", Engine_Type != \"None\", Weather_Condition != \"None\")  # Remove \"None\"\n```\n:::\n\n\nWe will not be using none values in our analysis.\n\n## 3.7 Box plots for checking outliers\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# Numeric columns for ggplot\nnumeric_columns <- names(ship_data)[sapply(ship_data, is.numeric)]\n\n# Boxplots for all numeric columns\nfor (i in numeric_columns) {\n  plot <- ggplot(ship_data, aes_string(y = i)) +\n    geom_boxplot(outlier.colour = \"red\", outlier.shape = 16, outlier.size = 2) +\n    labs(title = paste(\"Boxplot of\", i), y = i) +\n    theme_solarized()\n  \n  print(plot)\n}\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-12.png){width=672}\n:::\n:::\n\n\nNo outliers are found.\n\n## 3.8 New variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# numeric values confirmed and new columns are calculated\nship_data <- ship_data %>%\n  mutate(\n    Profit = Revenue_per_Voyage_USD - Operational_Cost_USD,  # Profit\n    Profit_Margin = (Profit / Revenue_per_Voyage_USD) * 100,  # Profit Margin in %\n  )\n```\n:::\n\n\nProfit and Profit_Margin are calculated which would later be used for analysis in Business context.\n\n## 3.9 Plot 0 - Corr plot to remove highly correlated outputs\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlibrary(ggcorrplot)\n\n# Numeric columns selected\ndf_numeric <- ship_data %>%\n  select(where(is.numeric)) %>%\n  mutate(across(everything(), as.numeric)) %>%\n  as.data.frame()\n\n# Correlation matrix\ncor_matrix <- cor(df_numeric, use = \"complete.obs\", method = \"pearson\")\n\n# Basic correlation heatmap\nggcorrplot(\n  cor_matrix, \n  type = \"lower\",  # Show only lower triangle to avoid redundancy\n  hc.order = TRUE,  # Cluster similar variables together\n  lab = TRUE,       # Show correlation values\n  lab_size = 3,     # Adjust label size\n  outline.color = \"black\",  # Box outline\n  colors = c(\"blue\", \"white\", \"red\"),  # Blue = Negative, White = Neutral, Red = Positive\n  title = \"Basic Correlation Heatmap for Multicollinearity Detection\"\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nOnly profit and revenue_per_voyage_usd are highly correlated but profit is a new created value for this analysis thus no columns would be removed based on the correlation heatmap plot.\n\n## 3.10 Remove columns not used for this analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  select(-c(\"Date\", \"Maintenance_Status\", \"Draft_meters\", \"Operational_Cost_USD\", \"Seasonal_Impact_Score\", \"Weekly_Voyage_Count\", \"Average_Load_Percentage\"))\n```\n:::\n\n\n\n\n# 4. Exploratory Data Analysis - EDA\n\n## Plot 1 - Speed over ground knots versus Cargo Weight tons\n\nHistogram for s1 - distribution of speed_over_ground_knots column, s2 - Cargo Weight tons distribution and patchwork is used to patch both distribution in a scatter plot as s3.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ns1 <- ggplot(data=ship_data, \n             aes(x = Speed_Over_Ground_knots)) +\n  geom_histogram(bins=20, \n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  ggtitle(\"Distribution of Speed_Over_Ground_knots\")\n\ns2 <- ggplot(data=ship_data, \n             aes(x = Cargo_Weight_tons)) +\n  geom_histogram(bins=20, \n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Cargo Weight tons\")\n\ns3 <- ggplot(data=ship_data, \n             aes(x= Speed_Over_Ground_knots, \n                 y= Cargo_Weight_tons)) +\n  geom_point(alpha=0.5) +\n  geom_smooth(method=lm, \n              linewidth=0.7, colour = \"red\") +  \n  ggtitle(\"Speed over ground knots versus Cargo Weight tons\")\n\n((s1 / s2) | s3) + \n  plot_annotation(tag_levels = 'I')\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nPlot 1 - Insights\n\n1) Ship Speed Distribution Between 10 and 25 knots, the speed dispersion is evenly distributed. The majority of ships operate within a restricted speed range since there are no severe outliers. This implies that operational speed control should be maintained throughout all journeys.\n\nBusiness context: Heavy cargo loads, bad weather, or problems with engine efficiency could be the cause of a ship operating at less than 10 knots. Possible to identify slow voyages and examine maintenance records for ships that are not operating well.\n\n2) Distribution of Cargo Weight (bottom-left) Cargo weights vary from zero to two thousand tons, indicating a wide variety of load capacities. The organization handles a range of cargoes rather than concentrating on a particular cargo size, as seen by the distribution's apparent uniformity.\n\nBusiness Context: Underutilization of cargo capacity may be indicated if a ship regularly transports lower-than-average loads. Ship selection for various cargo kinds could be optimized by determining high-profit cargo weight ranges.\n\n3) The Connection Between Cargo Weight and Speed - There is no correlation between cargo weight and speed in the scatterplot. Since the linear trend line is nearly flat, ship speed is not greatly impacted by cargo weight.It's not always the case that ships with larger loads move more slowly.\n\nBusiness Context: This defies the conventional wisdom that larger loads cause ships to move more slowly. It might suggest that ship engines are managing power effectively, however its just an assumption.\n\n## Plot 2 - Ship Performance by Ship Type\n\nMultiple ship performance metrics for various ship types are visualized using this parallel coordinate display. A ship is represented by each line, and other ship classifications are distinguished by the color-coded facets. Each metric's distribution is displayed in the boxplots overlay.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# Relevant numeric columns\nship_data_selected <- ship_data %>%\n  select(Ship_Type, Speed_Over_Ground_knots, Engine_Power_kW, \n         Distance_Traveled_nm, Turnaround_Time_hours, \n         Efficiency_nm_per_kWh, Profit_Margin)\n\n# Formatted Parallel Coordinates Plot\nggparcoord(data = ship_data_selected, \n           columns = c(2:7),  # Numeric columns\n           groupColumn = 1,  # Group by Ship Type\n           scale = \"uniminmax\",  # Normalize values\n           alphaLines = 0.1,  # Reduce clutter\n           boxplot = TRUE,  # Boxplots for distributions\n           title = \"Parallel Coordinates Plot: Ship Performance Metrics by Ship Type\") +\n  \n  # labels, titles, and axis formatted\n  facet_wrap(~ Ship_Type, scales = \"free_y\") +  # Facet by ship type\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),  # Center title\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # x-axis labels rotated\n    axis.text.y = element_text(size = 10),  # y-axis text size\n    strip.text = element_text(size = 12, face = \"bold\"),  # Facet label formatting\n    legend.position = \"bottom\"  # legend to bottom\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nPlot 2 - Insights \n\n1) All ship types have substantially different profit margins, with tankers and bulk carriers exhibiting the largest disparity.\n2) While efficiency and speed over ground are comparatively constant across ships, efficiency varies more with fish carriers.\n3) The considerable variation in turnaround time among ship classes suggests operational irregularities in port handling.\n4) Tankers and bulk carriers have larger engines, which may account for their higher fuel consumption and financial impact.\n\nSuggestions\n1) Because tankers and bulk carriers exhibit the greatest variance, profitability methods must to be tailored to the specific ship class.\n2) The operational performance of fish carriers and container ships is more predictable due to their more steady parameters.\n3) All ship types can gain from faster turnaround times, which could boost profitability.\n\n## Plot 3 - Revenue Distribution by Ship Type and Route\n\nX-axis → Revenue per Voyage (USD) → Shows the distribution of revenue values. Y-axis → Ship Type → Compares different ship categories. Facets → Route Type (Coastal, Long-haul, Short-haul, Transoceanic) → Breaks down revenue trends by shipping route. Color Gradient → Density Representation → Darker regions indicate where most revenue values are concentrated.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nShip_RidgePlot <- ggplot(ship_data, \n             aes(x = Revenue_per_Voyage_USD,  # X-axis: Revenue distribution\n                 y = Ship_Type,  # Y-axis: Ship categories\n                 fill = 0.5 - abs(0.5 - stat(ecdf)))) +  \n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +  \n  scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +  \n  facet_wrap(~ Route_Type, scales = \"free_x\") +  # Faceting by route\n  labs(title = \"Revenue Distribution by Ship Type and Route\",\n       subtitle = \"Density plots of revenue across different ship types and routes\",\n       x = \"Revenue per Voyage (USD)\") +  \n  scale_x_continuous(limits = c(0, max(ship_data$Revenue_per_Voyage_USD, na.rm = TRUE))) +  \n  theme_minimal() +  \n  theme(legend.position = \"none\",  \n        axis.title.y = element_blank(),  \n        axis.text.x = element_text(size = 5), # X-axis values\n        axis.ticks.x = element_line(size = 0.5),  #Enable X-axis ticks\n        plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 8))\n\n# Display plot\nShip_RidgePlot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nPlot 3 - Insights \n1) Across all ship types, long-haul and transoceanic routes provide the most revenue per voyage.\n2) Container ships and bulk carriers do marginally better than others on coastal and short-haul routes, which have lower revenue distributions.\n3) The more consistent income distribution of tankers indicates more consistent revenue generating across various route types.\n4) Container ships exhibit greater income fluctuation, especially on long-haul routes, suggesting areas for profit maximization.\n\nSuggestions\n1) For high-value goods, long-haul and transoceanic routes should be given priority since they yield the most revenue.\n2) For short-haul and coastal routes to be more profitable, especially for bulk carriers, efficiency improvements may be necessary.\n3) Tanker operations are a fantastic choice for consistent revenue creation because they are comparatively steady.\n4) Long-haul container ships should be optimized because they have a greater potential to increase revenue in this category.\n\n## Plot 4 - Efficiency vs ship_type\n\nThis ggbetweenstats plot compares fuel efficiency (Efficiency_nm_per_kWh) across different ship types:\n\nViolin + Boxplot Combination - Shows distribution and spread of efficiency data. \nMedian Efficiency (μ_median) → Highlights central efficiency values per ship type. \nKruskal-Wallis Test (χ² = 4.24, p = 0.24) - Checks if efficiency differences are statistically significant. Pairwise Dunn Test - Tests specific ship type comparisons.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# Comparison plot\nggbetweenstats(\n  data = ship_data,\n  x = Ship_Type,  # Categorical variable\n  y = Efficiency_nm_per_kWh,  # Numeric variable to compare\n  type = \"np\",  # Non-parametric test\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nPlot 4 - Insights \n\nX-axis (Ship Type) - Categories of ships compared. \nY-axis (Fuel Efficiency nm per kWh) -  Measures how far ships travel per unit of fuel. \nMedian Values (μ_median) - Container Ships have the highest median efficiency (0.81 nm per kWh). \nTanker & Fish Carriers have similar efficiency (0.74 nm per kWh) which is the lowest_median efficiency\nBulk Carriers have medium median efficiency (0.78 nm per kWh). Variability & Spread → Tankers have the widest spread, indicating greater inconsistency in fuel efficiency. Fish Carriers & Container Ships have less variability, meaning more stable efficiency\n\n1) Bulk carriers and container ships have the highest median fuel efficiency.\n2) The efficiency of tankers and fish carriers is marginally lower, with the dispersion of fish carriers being more dispersed.\n3) The p-value from the Kruskal-Wallis test indicates that there is no statistically significant difference in efficiency between ship types as p values is more than 0.05\n\nSuggestions\n1) Since all ship types operate at roughly the same efficiency levels, route choice and cargo weight will probably have a greater impact on fuel expenditures than ship type alone.\n2) On average, container ships use the least amount of gasoline, which makes them an economical option for enterprises that are sensitive to fuel use.\n3) The greatest variable efficiency is found in fish carriers, which may be caused by variations in cargo load, engine type, or weather conditions.\n\n\n## Plot 5 - Fuel Efficiency by Engine Type and Profit Margins Across Weather Conditions\n\nBoxplot of Fuel Efficiency by Engine Type (Left) Heatmap of Profit Margins Across Weather Conditions (Right) profit margins are binned to fit in the heatmap and a new sub dataset is created to use for plotting the heatmap\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# Boxplot for Fuel Efficiency by Engine Type\nEngineType_boxplot <- ggplot(ship_data, aes(x = Engine_Type, y = Efficiency_nm_per_kWh, fill = Engine_Type)) +\n  geom_boxplot(position = position_dodge(0.8)) +\n  theme_minimal() +\n  labs(y = \"Fuel Efficiency (nm per kWh)\", \n       x = \"Engine Type\", \n       title = \"Comparison of Fuel Efficiency Across Engine Types\") +\n  scale_fill_manual(values = c(\"Diesel\" = \"steelblue\", \"Heavy Fuel Oil (HFO)\" = \"green\", \n                               \"Steam Turbine\" = \"orange\")) +\n  theme(legend.position = \"bottom\",\n        axis.title.x = element_text(size = 8),\n        axis.title.y = element_text(size = 8),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        axis.text.x = element_text(size = 8),\n        plot.subtitle = element_text(size = 8),\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8))\n\n# Profit Margin binned for visualisation\nship_data <- ship_data %>%\n  mutate(Profit_Binned = cut(Profit_Margin, \n                             breaks = c(-Inf, -50, 0, 50, 100, Inf), \n                             labels = c(\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\")))\n\n# sub dataset to ensure all weather conditions are represented\ndf_complete <- ship_data %>%\n  complete(Weather_Condition, Profit_Binned, fill = list(Profit_Margin = 0))\n\n# Heatmap\nProfit_Weather_heatmap <- ggplot(df_complete, aes(x = Weather_Condition, y = Profit_Binned, fill = Profit_Margin)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"steelblue\") +\n  labs(x = \"Weather Condition\",\n       y = \"Profit Margin Category\",\n       fill = \"Profit Margin\",\n       subtitle = \"Heatmap of Profit Margins Across Different Weather Conditions\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(size = 8), \n        axis.text.y = element_text(size = 8),\n        axis.title.x = element_text(size = 8),\n        axis.title.y = element_text(size = 8), \n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 8),\n        plot.subtitle = element_text(size = 8))\n\nEngineType_boxplot + Profit_Weather_heatmap\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nPlot 5 - Insights\n\nBOXPLOT \nThe distribution of fuel efficiency (nm per kWh) for various engine types. The typical efficiency for each engine type is displayed by the median line in each box. The amount of variation in fuel efficiency is indicated by the spread of the boxes (IQR).\n\nHEATMAP \nIt displays how varied weather conditions affect company margins. Higher percentages of ships with certain profit margins are shown by darker hues. There are fewer ships operating in lighter regions with particular profit margins.\n\n1) The fuel efficiency distributions of diesel, heavy fuel oil (HFO), and steam turbine engines are similar, with some variation in outliers. \n2) The profit margins under various weather conditions vary, with \"calm\" conditions showing more evenly distributed profitability. \n3) Moderate weather conditions have a higher proportion of low-profit voyages, indicating efficiency loss due to external factors like wind resistance or fuel overconsumption. \n4) As expected, rough weather has a negative impact on profit margins, but there are still some profitable voyages.\n\nSuggestions\n1) Profit swings are greatly influenced by the weather, particularly in moderate and rough conditions.\n2) Diesel and HFO engines perform similarly in fuel efficiency, so fuel selection may not be the primary determinant of efficiency.\n3) Profitability in rough weather can be route-dependent, implying that particular journeys are more adaptable to external conditions.\n4) Ships could be strategically deployed during favorable weather conditions to maximize profits and minimize efficiency losses.\n\n\n# 5. Summary\n\nRoute-based optimization solutions are necessary since profit margins differ greatly among ship types, routes, and weather conditions.Although ship types do not significantly differ in fuel efficiency, container ships are typically the most fuel-efficient choice. The biggest revenue is generated by long-haul and transoceanic flights, indicating that fuel cost optimization should be prioritized for these routes.\nProfitability is greatly impacted by weather, thus in order to minimize losses, trip planning should take weather forecasts into consideration. Tankers and bulk carriers exhibit the greatest profit fluctuation, hence risk-mitigation techniques (such hedging fuel prices) have to be investigated.\n\n\n# 6. Conclusion and Future Recommendation\n\nThis ship performance analysis aims to provide insights into operational efficiency, cost management, and profitability across different ship types. Key performance metrics such as speed, turnaround time, fuel efficiency, and profit margins are examined to identify trends that can drive better fleet management decisions. Understanding how cargo weight, engine power, and distance traveled impact ship performance allows for optimizing route planning, fuel consumption, and overall cost efficiency. The analysis also explores the relationship between operational costs and efficiency, identifying high-cost, low-efficiency operations that may require intervention. The analysis highlights ships that consistently perform better and those that require operational improvements. The findings can be used to enhance ship allocation strategies, reduce unnecessary costs, and maximize profitability. Future exploration of seasonal impacts, maintenance status, and predictive trends could provide more refined strategies for improving maritime logistics and operational planning.\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
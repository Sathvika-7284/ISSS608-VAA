---
title: "Hands-on Exercise 4-2"
author: "Sathvika Subramanian"
date: "February 5, 2025"
date-modified: "last-modified"
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

# Visual Statistical Analysis

# Visual Statistical Analysis with ggstatsplot

# 1. Getting Started

## 1.1 Installing and launching R packages

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

## 1.2 Import data

```{r}
exam <- read_csv("data/Exam_data.csv")
```

## 1.3 One-sample test: gghistostats() method

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.values = 60,
  xlab = "English scores"
)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = MATHS,
  type = "bayes",
  test.values = 60,
  xlab = "Math scores"
)
```

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = SCIENCE,
  type = "bayes",
  test.values = 60,
  xlab = "English scores"
)
```

## 1.4 Two-sample mean test: ggbetweenstats()

```{r}
ggbetweenstats(
  data = exam,
  x = GENDER,
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

```{r}
ggbetweenstats(
  data = exam,
  x = GENDER,
  y = SCIENCE,
  type = "np",
  messages = FALSE
)
```

## 1.5  Oneway ANOVA Test: ggbetweenstats() method

```{r}

ggbetweenstats(
  data = exam,
  x = RACE,
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE,
  pairwise.comparisons = TRUE,
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

## 1.6 Significant Test of Correlation: ggscatterstats()

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
)
```

## 1.7 Significant Test of Association (Depedence) : ggbarstats() methods

```{r}
exam1 <- exam %>%
  mutate(MATHS_bins =
           cut(MATHS,
               breaks = c(0,60,75,85,100)))
```

```{r}
ggbarstats(exam1,
           x = MATHS_bins,
           y = GENDER)
```

```{r}
exam1 <- exam %>%
  mutate(ENGLISH_bins =
           cut(ENGLISH,
               breaks = c(0,60,75,85,100)))
```

```{r}
ggbarstats(exam1,
           x = ENGLISH_bins,
           y = GENDER)
```


# 2. Visualising Models

## 2.1 Installing and loading the required libraries

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

## 2.2 Importing Excel file: readxl methods

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", "data")

car_resale
```

## 2.3 Multiple Regression Model using lm()

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, data = car_resale)

model
```

## 2.4 Model Diagnostic: checking for multicolinearity

```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

## 2.5 Model Diagnostic: checking normality assumption

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```

## 2.6 Model Diagnostic: Check model for homogeneity of variances

```{r}
check_h <- check_heteroscedasticity(model)
```

```{r}
plot(check_h)
```

## 2.7 Model Diagnostic: Complete check

```{r}
check_model(model1)
```

## 2.8 Visualising Regression Parameters: see methods

```{r}
plot(parameters(model1))
```

## 2.9 Visualising Regression Parameters: ggcoefstats() methods

```{r}
ggcoefstats(model1,
            output = "plot")
```